name: Build python app

on:
  push:
    branches: main

jobs:
  build-fastapi-app:
    name: Build FastAPI App
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      actions: read
      checks: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r fast-api-skeleton/content/requirements.txt
          pip install pytest pytest-md pytest-emoji
      
      - name: configure gcp credentials
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

      - name: Unit Tests
        uses: pavelzw/pytest-action@v2
        continue-on-error: true
        with:
          verbose: true
          emoji: false
          job-summary: true
          custom-arguments: '-q'
          click-to-expand: false
          report-title: 'Unit Tests Report'

      - name: Git Leaks - Scanning for passwords, tokens, etc.
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        with:
          projectBaseDir: fast-api-skeleton/content
          args: >
            -Dsonar.projectKey=fastapi-application-template
